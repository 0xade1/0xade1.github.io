<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sha254 on Poney Island</title>
    <link>https://0xade1.github.io/devdraft/tags/sha254/</link>
    <description>Recent content in sha254 on Poney Island</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://0xade1.github.io/devdraft/tags/sha254/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>picoCTF 2021 - Reverse Engineering</title>
      <link>https://0xade1.github.io/devdraft/posts/2021/08/picoctf-2021-reverse-engineering/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://0xade1.github.io/devdraft/posts/2021/08/picoctf-2021-reverse-engineering/</guid>
      <description>Transformation Auditing the provided piece of code (below), we can reverse engineer and identify some form of custom encoding:
The encoding works two bytes at a time because of range(.., 2). So we have to read 16bits at a time. Every two bytes, each byte are converted in integer value with ord First byte is multiplied by 256 with &amp;lt;&amp;lt; 8 operation, then second byte is added to the result 1 &amp;#39;&amp;#39;.</description>
    </item>
    
  </channel>
</rss>
