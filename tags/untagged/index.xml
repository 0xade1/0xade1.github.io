<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>untagged on Poney Island</title><link>https://0xade1.github.io/tags/untagged/</link><description>Recent content in untagged on Poney Island</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 17 Aug 2022 03:42:29 +0800</lastBuildDate><atom:link href="https://0xade1.github.io/tags/untagged/index.xml" rel="self" type="application/rss+xml"/><item><title>PicoCTF2019 - Cryptography</title><link>https://0xade1.github.io/posts/2022/08/picoctf2019-cryptography/</link><pubDate>Wed, 17 Aug 2022 03:42:29 +0800</pubDate><guid>https://0xade1.github.io/posts/2022/08/picoctf2019-cryptography/</guid><description>The Numbers 1 2 tbl = [16,9,3,15,3,20,6,20,8,5,14,21,13,2,5,18,19,13,1,19,15,14] print(&amp;#34;picoCTF{%s}&amp;#34; % &amp;#39;&amp;#39;.join([chr(x+96) for x in tbl[7:]])) Easy1 Cyberchef: https://cyberchef.org/#recipe=Vigen%C3%A8re_Decode('SOLVECRYPTO')&amp;amp;input=VUZKS1hRWlFVTkI
logon sign in with joe:joe with developer tools, look at the cookies change admin cookie from False to True reload the page 1 2 curl -Ls --cookie &amp;#34;admin=True&amp;#34; https://jupiter.challenges.picoctf.org/problem/44573/flag | grep pico | cut -d&amp;#39;&amp;gt;&amp;#39; -f5 | cut -d&amp;#39;&amp;lt;&amp;#39; -f1 13 echo &amp;quot;cvpbPGS{abg_gbb_onq_bs_n_ceboyrz}&amp;quot; | tr &amp;quot;[a-zA-Z]&amp;quot; &amp;quot;[n-za-mN-ZA-M]&amp;quot; caesar caesar=$(curl -Ls https://jupiter.challenges.picoctf.org/static/7d707a443e95054dc4cf30b1d9522ef0/ciphertext) echo $caesar | cut -d'{' -f2 | cut -d'}' -f1 Cyberchef: https://cyberchef.</description></item><item><title>PicoCTF2019 - Forensics</title><link>https://0xade1.github.io/posts/2022/08/picoctf2019-forensics/</link><pubDate>Wed, 17 Aug 2022 03:42:29 +0800</pubDate><guid>https://0xade1.github.io/posts/2022/08/picoctf2019-forensics/</guid><description>Glory of the Garden strings garden.jpg | grep pico xxd garden.jpg | tail So Meta curl -Ls https://jupiter.challenges.picoctf.org/static/916b07b4c87062c165ace1d3d31ef655/pico_img.png | exiftool - | grep pico | awk '{print $3}' shark on wire 1 Download pcap open with Wireshark select filter udp.stream eq 6 Follow UDP stream 1 tshark -q -r capture.pcap -z follow,udp,raw,6 | egrep &amp;#34;^[0-9]&amp;#34; | xxd -r -p We can also iterate over every udp streams:
1 2 3 4 for stream in `tshark -q -r capture.</description></item><item><title>PicoCTF2019 - General Skills</title><link>https://0xade1.github.io/posts/2022/08/picoctf2019-general-skills/</link><pubDate>Wed, 17 Aug 2022 03:42:29 +0800</pubDate><guid>https://0xade1.github.io/posts/2022/08/picoctf2019-general-skills/</guid><description>Lets Warm Up 1 print(&amp;#34;picoCTF{%s}&amp;#34; % (chr(int(&amp;#39;70&amp;#39;, 16)))) Warmed Up 1 print(&amp;#34;picoCTF{%s}&amp;#34; % int(&amp;#39;3d&amp;#39;, 16)) 2Warm 1 print(&amp;#34;picoCTF{%s}&amp;#34; % &amp;#34;{0:b}&amp;#34;.format(42)) what s a netcat? nc jupiter.challenges.picoctf.org 41120 | grep pico strings it curl -sL https://jupiter.challenges.picoctf.org/static/fae9ac5267cd6e44124e559b901df177/strings | strings | grep pico Bases echo &amp;quot;bDNhcm5fdGgzX3IwcDM1&amp;quot; | base64 -d | awk '{printf &amp;quot;picoCTF{%s}\n&amp;quot;, $1}' First Grep curl -Ls https://jupiter.challenges.picoctf.org/static/515f19f3612bfd97cd3f0c0ba32bd864/file | grep pico Based 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #!</description></item><item><title>PicoCTF2019 - Reverse Engineering</title><link>https://0xade1.github.io/posts/2022/08/picoctf2019-reverse-engineering/</link><pubDate>Wed, 17 Aug 2022 03:42:29 +0800</pubDate><guid>https://0xade1.github.io/posts/2022/08/picoctf2019-reverse-engineering/</guid><description>vault-door-training grep password.equals VaultDoorTraining.java | cut -d'&amp;quot;' -f2 | awk '{printf &amp;quot;picoCTF{%s}\n&amp;quot;, $1}' vault-door-1 flag=$( curl -sL https://jupiter.challenges.picoctf.org/static/87e103a8db01087de9ccf5a7a022ddf8/VaultDoor1.java | grep charAt | cut -d'(' -f2 | sort -n | cut -d&amp;quot;'&amp;quot; -f2 | tr -d &amp;quot;\n&amp;quot; ) echo &amp;quot;picoCTF{$flag}&amp;quot; asm1 This is how the stack looks like after the prolog:
| old ebp | | ret | &amp;lt;-- ebp+4 | 0x8be | &amp;lt;-- ebp+8 Lets audit the program with this doc as a reference:</description></item><item><title>PicoCTF2019 - Web-Exploitation</title><link>https://0xade1.github.io/posts/2022/08/picoctf2019-web-exploitation/</link><pubDate>Wed, 17 Aug 2022 03:42:29 +0800</pubDate><guid>https://0xade1.github.io/posts/2022/08/picoctf2019-web-exploitation/</guid><description>Insp3ct0r for i in &amp;quot;&amp;quot; mycss.css myjs.js ; do curl -s https://jupiter.challenges.picoctf.org/problem/9670/$i | grep flag | cut -d':' -f2 | cut -d' ' -f2 | tr -d &amp;quot;\n&amp;quot; ; done &amp;amp;&amp;amp; echo where are the robots URL=https://jupiter.challenges.picoctf.org/problem/56830/ page=$(curl -Ls $URL/robots.txt | grep Disallow | cut -d' ' -f2) curl -Ls $URL/$page | grep picoCTF | cut -d'&amp;gt;' -f2 | cut -d'&amp;lt;' -f1 logon sign in with joe:joe with developer tools, look at the cookies change admin cookie from False to True reload the page 1 2 curl -Ls --cookie &amp;#34;admin=True&amp;#34; https://jupiter.</description></item><item><title>Htb Bolt</title><link>https://0xade1.github.io/posts/2021/10/htb-bolt/</link><pubDate>Thu, 28 Oct 2021 21:26:15 +0800</pubDate><guid>https://0xade1.github.io/posts/2021/10/htb-bolt/</guid><description>Reconnaissance Open 10.10.11.114:22 Open 10.10.11.114:80 Open 10.10.11.114:443 PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http syn-ack nginx 1.18.0 (Ubuntu) |_http-favicon: Unknown favicon MD5: 76362BB7970721417C5F484705E5045D | http-methods: |_ Supported Methods: HEAD GET OPTIONS |_http-server-header: nginx/1.18.0 (Ubuntu) |_http-title: Starter Website - About 443/tcp open ssl/http syn-ack nginx 1.18.0 (Ubuntu) |_http-favicon: Unknown favicon MD5: 82C6406C68D91356C9A729ED456EECF4 | http-methods: |_ Supported Methods: GET HEAD POST |_http-server-header: nginx/1.</description></item><item><title>Htb Seal</title><link>https://0xade1.github.io/posts/2021/10/htb-seal/</link><pubDate>Sun, 24 Oct 2021 20:06:41 +0800</pubDate><guid>https://0xade1.github.io/posts/2021/10/htb-seal/</guid><description>rustscan -a 10.10.10.250 -t 2000 -- -Pn -A -sCV Open 10.10.10.250:22 Open 10.10.10.250:443 Open 10.10.10.250:8080 PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) 443/tcp open ssl/http syn-ack nginx 1.18.0 (Ubuntu) | http-methods: |_ Supported Methods: OPTIONS GET HEAD POST |_http-server-header: nginx/1.18.0 (Ubuntu) |_http-title: Seal Market | ssl-cert: Subject: commonName=seal.htb/organizationName=Seal Pvt Ltd/stateOrProvinceName=London/countryName=UK/emailAddress=admin@seal.htb/organizationalUnitName=Infra/localityName=Hackney | Issuer: commonName=seal.htb/organizationName=Seal Pvt Ltd/stateOrProvinceName=London/countryName=UK/emailAddress=admin@seal.htb/organizationalUnitName=Infra/localityName=hackney | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2021-05-05T10:24:03 | Not valid after: 2022-05-05T10:24:03 | MD5: 9c4f 991a bb97 192c df5a c513 057d 4d21 | SHA-1: 0de4 6873 0ab7 3f90 c317 0f7b 872f 155b 305e 54ef | -----BEGIN CERTIFICATE----- | MIIDiDCCAnACAWQwDQYJKoZIhvcNAQELBQAwgYkxCzAJBgNVBAYTAlVLMQ8wDQYD | VQQIDAZMb25kb24xEDAOBgNVBAcMB2hhY2tuZXkxFTATBgNVBAoMDFNlYWwgUHZ0 | IEx0ZDEOMAwGA1UECwwFSW5mcmExETAPBgNVBAMMCHNlYWwuaHRiMR0wGwYJKoZI | hvcNAQkBFg5hZG1pbkBzZWFsLmh0YjAeFw0yMTA1MDUxMDI0MDNaFw0yMjA1MDUx | MDI0MDNaMIGJMQswCQYDVQQGEwJVSzEPMA0GA1UECAwGTG9uZG9uMRAwDgYDVQQH | DAdIYWNrbmV5MRUwEwYDVQQKDAxTZWFsIFB2dCBMdGQxDjAMBgNVBAsMBUluZnJh | MREwDwYDVQQDDAhzZWFsLmh0YjEdMBsGCSqGSIb3DQEJARYOYWRtaW5Ac2VhbC5o | dGIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDafbynnscdjWeuXTrD | M36rTJ0y2pJpDDFe9ngryz/xw1KsoPfEDrDE0XHc8LVlD9cxXd/8+0feeV34d63s | YyZ0t5tHlAKw1h9TEa/og1yR1MyxZRf+K/wcX+OwXYFtMHkXCZFH7TPXLKtCrMJM | Z6GCt3f1ccrI10D+/dMo7eyQJsat/1e+6PgrTWRxImcjOCDOZ1+mlfSkvmr5TUBW | SU3uil2Qo5Kj9YLCPisjKpVuyhHU6zZ5KuBXkudaPS0LuWQW1LTMyJzlRfoIi9J7 | E2uUQglrTKKyd3g4BhWUABbwyxoj2WBbgvVIdCGmg6l8JPRZXwdLaPZ/FbHEQ47n | YpmtAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJZGFznhRSEa2DTgevXl1T8uxpiG | PPd9R0whiIv3s225ir9SWW3Hl1tVkEY75G4PJA/DxmBIHxIK1OU8kZMuJUevnSIC | rK16b9Y5Y1JEnaQwfKCoQILMU40ED76ZIJigGqAoniGCim/mwR1F1r1g63oUttDT | aGLrpvN6XVkqSszpxTMMHk3SqwNaKzsaPKWPGuEbj9GGntRo1ysqZfBttgUMFIzl | 7un7bBMIn+SPFosNGBmXIU9eyR7zG+TmpGYvTgsw0ZJqZL9yQIcszJQZPV3HuLJ8 | 8srMeWYlzSS1SOWrohny4ov8jpMjWkbdnDNGRMXIUpapho1R82hyP7WEfwc= |_-----END CERTIFICATE----- | tls-alpn: |_ http/1.</description></item><item><title>HTB - Intelligence</title><link>https://0xade1.github.io/posts/2021/10/htb-intelligence/</link><pubDate>Sat, 23 Oct 2021 21:33:15 +0800</pubDate><guid>https://0xade1.github.io/posts/2021/10/htb-intelligence/</guid><description>Reckon port scan rustscan -a 10.10.10.248 -t 2000 -- -Pn -A -sCV [..] Open 10.10.10.248:53 Open 10.10.10.248:80 Open 10.10.10.248:88 Open 10.10.10.248:135 Open 10.10.10.248:139 Open 10.10.10.248:389 Open 10.10.10.248:445 Open 10.10.10.248:464 Open 10.10.10.248:593 Open 10.10.10.248:636 nmap -p53,80,88,135,139,389,445,464,593,636 -sCV -A 10.10.10.248 [..] PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 80/tcp open http Microsoft IIS httpd 10.0 | http-methods: |\_ Potentially risky methods: TRACE |\_http-server-header: Microsoft-IIS/10.0 |\_http-title: Intelligence 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2021-10-23 20:31:43Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.</description></item><item><title>HTB - Dynstr</title><link>https://0xade1.github.io/posts/2021/10/htb-dynstr/</link><pubDate>Sat, 16 Oct 2021 22:18:20 +0800</pubDate><guid>https://0xade1.github.io/posts/2021/10/htb-dynstr/</guid><description>Exploration $ nmap -p- --min-rate 3000 -v -T4 10.10.10.244 22/tcp open ssh 53/tcp open domain 80/tcp open http $ nmap -p22,53,80 -sCV 10.10.10.244 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) 53/tcp open domain ISC BIND 9.16.1 (Ubuntu Linux) | dns-nsid: |\_ bind.version: 9.16.1-Ubuntu 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |\_http-server-header: Apache/2.4.41 (Ubuntu) |\_http-title: Dyna DNS Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Web exploration reveals:</description></item><item><title>Responder to Capture Domain Hashes</title><link>https://0xade1.github.io/posts/2021/10/responder-to-capture-domain-hashes/</link><pubDate>Wed, 13 Oct 2021 22:11:33 +0800</pubDate><guid>https://0xade1.github.io/posts/2021/10/responder-to-capture-domain-hashes/</guid><description>Integer tristique mattis condimentum. Pellentesque sit amet mauris malesuada, volutpat nunc ultrices, molestie massa. Nulla sit amet sem id erat ornare tincidunt eu id neque. Phasellus imperdiet, leo nec ultricies feugiat, augue elit pharetra mauris, ut porttitor mauris est non enim. Sed in quam nec turpis lacinia faucibus. Nulla semper lorem eget magna porta, eget pellentesque arcu finibus. Suspendisse nec nisl ac sapien gravida tincidunt ut et diam. Mauris suscipit, erat ut bibendum venenatis, nulla nibh tempor justo, nec bibendum velit mauris sed est.</description></item><item><title>HTB - Jarmis</title><link>https://0xade1.github.io/posts/2021/10/htb-jarmis/</link><pubDate>Sat, 02 Oct 2021 18:08:06 +0800</pubDate><guid>https://0xade1.github.io/posts/2021/10/htb-jarmis/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 rustscan 10.10.11.117 [&amp;gt;] The Nmap command to be run is nmap -vvv -p 22,80 10.10.11.117 PORT STATE SERVICE REASON 22/tcp open ssh syn-ack 80/tcp open http syn-ack nmap -p22,80 -sC -sV 10.10.11.117 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 ea:84:21:a3:22:4a:7d:f9:b5:25:51:79:83:a4:f5:f2 (RSA) | 256 b8:39:9e:f4:88:be:aa:01:73:2d:10:fb:44:7f:84:61 (ECDSA) |_ 256 22:21:e9:f4:85:90:87:45:16:1f:73:36:41:ee:3b:32 (ED25519) 80/tcp open http nginx 1.</description></item><item><title>Social Media Dont Care for Your Privacy</title><link>https://0xade1.github.io/posts/2021/09/social-media-dont-care-for-your-privacy/</link><pubDate>Wed, 29 Sep 2021 10:05:52 +0800</pubDate><guid>https://0xade1.github.io/posts/2021/09/social-media-dont-care-for-your-privacy/</guid><description>[//]: &amp;lt;&amp;gt; (ceci est un commentaire ) The Maslow pyramid
Social Media lures you to believe they care for your wellness Over the years, Social Media has hired Neuroscientists to make their platform so addictive that the psychological needs has been revisited and took priority over Security and safety. How secure and how private is our data matters less then our perception of privacy and security; and therefore while we focus less in Digital Safety then our needs for digital social interaction, social media invests more into Public Relationship, lawyers, marketing and lobbyist to secure their reputation.</description></item><item><title>Are Privacy Laws a Joke About Privacy?</title><link>https://0xade1.github.io/posts/2021/09/are-privacy-laws-a-joke-about-privacy/</link><pubDate>Wed, 29 Sep 2021 05:32:17 +0800</pubDate><guid>https://0xade1.github.io/posts/2021/09/are-privacy-laws-a-joke-about-privacy/</guid><description>You dont read Terms and Conditions of services you use Let&amp;rsquo;s face the reality, you can&amp;rsquo;t read 20 min of Terms and Conditions in 2 seconds every website or services you visit
Have you actually, once in your life, seriously read one with all the attention it deserves to fully understand at which extent your privacy is at stake? I did it couple of times before I realized how vain effort it was.</description></item><item><title>Test3</title><link>https://0xade1.github.io/posts/2021/09/test3/</link><pubDate>Sun, 26 Sep 2021 20:32:30 +0800</pubDate><guid>https://0xade1.github.io/posts/2021/09/test3/</guid><description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam quis velit purus. Maecenas ut eleifend neque. Nunc eget tempus nisl. Vivamus malesuada, ante vel commodo rutrum, mi turpis sollicitudin libero, quis lacinia tortor odio sed purus. Phasellus hendrerit mollis tempor. Suspendisse cursus quis eros vel iaculis. Cras eu rutrum risus, sit amet iaculis dolor. In vitae eros a neque ullamcorper cursus quis non ex.</description></item><item><title>Test</title><link>https://0xade1.github.io/posts/2021/02/test/</link><pubDate>Sun, 07 Feb 2021 13:45:14 +0800</pubDate><guid>https://0xade1.github.io/posts/2021/02/test/</guid><description>Nam quis suscipit lacus. Nullam hendrerit massa ligula, vel finibus nisl rhoncus in. Maecenas urna libero, pulvinar et pellentesque non, auctor id libero. Integer et velit vehicula, sollicitudin sapien et, finibus est. Duis sodales velit vel nisl pharetra, ut feugiat arcu mollis. Phasellus id iaculis nunc. Suspendisse dignissim augue sit amet finibus ornare. Donec mattis mollis odio et pharetra. Vestibulum ut gravida urna. Curabitur fringilla urna est, nec rutrum sem vulputate congue.</description></item><item><title>test 2</title><link>https://0xade1.github.io/posts/2021/01/test-2/</link><pubDate>Fri, 29 Jan 2021 20:15:44 +0800</pubDate><guid>https://0xade1.github.io/posts/2021/01/test-2/</guid><description>Intro Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam quis velit purus. Maecenas ut eleifend neque. Nunc eget tempus nisl. Vivamus malesuada, ante vel commodo rutrum, mi turpis sollicitudin libero, quis lacinia tortor odio sed purus. Phasellus hendrerit mollis tempor. Suspendisse cursus quis eros vel iaculis. Cras eu rutrum risus, sit amet iaculis dolor. In vitae eros a neque ullamcorper cursus quis non ex.
Title 1 Sed consectetur enim non erat mattis pretium.</description></item></channel></rss>